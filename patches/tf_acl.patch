 *******************************************************************************
 Copyright 2021 Arm Limited and affiliates.
 SPDX-License-Identifier: Apache-2.0

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
 *******************************************************************************
diff --git a/third_party/compute_library/compute_library.patch b/third_party/compute_library/compute_library.patch
index ee811b03a57..ccd20a2a443 100644
--- a/third_party/compute_library/compute_library.patch
+++ b/third_party/compute_library/compute_library.patch
@@ -4,5 +4,5 @@ index 000000000..c986ad52a
 --- /dev/null
 +++ b/arm_compute_version.embed
 @@ -0,0 +1,1 @@
-+"arm_compute_version=v21.05 Build options: {} Git hash=b'N/A'"
-\ No newline at end of file
\ No newline at end of file
++"arm_compute_version=v21.08 Build options: {} Git hash=b'N/A'"
+\ No newline at end of file
diff --git a/tensorflow/workspace2.bzl b/tensorflow/workspace2.bzl
index 3e66023a149..2e2c842026c 100644
--- a/tensorflow/workspace2.bzl
+++ b/tensorflow/workspace2.bzl
@@ -192,23 +192,23 @@ def _tf_repositories():
     tf_http_archive(
         name = "mkl_dnn_acl_compatible",
         build_file = "//third_party/mkl_dnn:mkldnn_acl.BUILD",
-        sha256 = "ccb2dbd9da36cd873cf573b4201d61bdba7438f12b144e6c7d061eb12a641751",
-        strip_prefix = "oneDNN-2.3",
+        sha256 = "a7f2a4d80d5406d156dfc1d7b27d10b0af5ed061cf0b6197d3d12cddc6790fcb",
+        strip_prefix = "oneDNN-2.4",
         urls = [
-            "https://storage.googleapis.com/mirror.tensorflow.org/github.com/oneapi-src/oneDNN/archive/v2.3.tar.gz",
-            "https://github.com/oneapi-src/oneDNN/archive/v2.3.tar.gz",
+            "https://storage.googleapis.com/mirror.tensorflow.org/github.com/oneapi-src/oneDNN/archive/v2.4.tar.gz",
+            "https://github.com/oneapi-src/oneDNN/archive/v2.4.tar.gz",
         ],
     )
 
     tf_http_archive(
         name = "compute_library",
-        sha256 = "18011eb6dc999f030df609ff2b528e0067ab9f76921fa0b53e35859e06a0aa10",
-        strip_prefix = "ComputeLibrary-21.05",
+        sha256 = "1c62d41be62c14c8ff196d6aaa9f9efe0597b82a923350d922e8cde217dd1d86",
+        strip_prefix = "ComputeLibrary-21.08",
         build_file = "//third_party/compute_library:BUILD",
         patch_file = "//third_party/compute_library:compute_library.patch",
         urls = [
-            "https://storage.googleapis.com/mirror.tensorflow.org/github.com/ARM-software/ComputeLibrary/archive/v21.05.tar.gz",
-            "https://github.com/ARM-software/ComputeLibrary/archive/v21.05.tar.gz",
+            "https://storage.googleapis.com/mirror.tensorflow.org/github.com/ARM-software/ComputeLibrary/archive/v21.08.tar.gz",
+            "https://github.com/ARM-software/ComputeLibrary/archive/v21.08.tar.gz",
         ],
     )
 
diff --git a/third_party/mkl_dnn/mkldnn_acl.BUILD b/third_party/mkl_dnn/mkldnn_acl.BUILD
index cafe160f433..3cd5e97c1ff 100644
--- a/third_party/mkl_dnn/mkldnn_acl.BUILD
+++ b/third_party/mkl_dnn/mkldnn_acl.BUILD
@@ -13,6 +13,29 @@ _DNNL_RUNTIME_OMP = {
     "#cmakedefine DNNL_WITH_SYCL": "#undef DNNL_WITH_SYCL",
     "#cmakedefine DNNL_WITH_LEVEL_ZERO": "#undef DNNL_WITH_LEVEL_ZERO",
     "#cmakedefine DNNL_SYCL_CUDA": "#undef DNNL_SYCL_CUDA",
+    "#cmakedefine DNNL_ENABLE_STACK_CHECKER": "#undef DNNL_ENABLE_STACK_CHECKER",
+    "#cmakedefine01 BUILD_TRAINING": "#define BUILD_TRAINING 1",
+    "#cmakedefine01 BUILD_INFERENCE": "#define BUILD_INFERENCE 0",
+    "#cmakedefine01 BUILD_PRIMITIVE_ALL": "#define BUILD_PRIMITIVE_ALL 1",
+    "#cmakedefine01 BUILD_BATCH_NORMALIZATION": "#define BUILD_BATCH_NORMALIZATION 0",
+    "#cmakedefine01 BUILD_BINARY": "#define BUILD_BINARY 0",
+    "#cmakedefine01 BUILD_CONCAT": "#define BUILD_CONCAT 0",
+    "#cmakedefine01 BUILD_CONVOLUTION": "#define BUILD_CONVOLUTION 0",
+    "#cmakedefine01 BUILD_DECONVOLUTION": "#define BUILD_DECONVOLUTION 0",
+    "#cmakedefine01 BUILD_ELTWISE": "#define BUILD_ELTWISE 0",
+    "#cmakedefine01 BUILD_INNER_PRODUCT": "#define BUILD_INNER_PRODUCT 0",
+    "#cmakedefine01 BUILD_LAYER_NORMALIZATION": "#define BUILD_LAYER_NORMALIZATION 0",
+    "#cmakedefine01 BUILD_LRN": "#define BUILD_LRN 0",
+    "#cmakedefine01 BUILD_MATMUL": "#define BUILD_MATMUL 0",
+    "#cmakedefine01 BUILD_POOLING": "#define BUILD_POOLING 0",
+    "#cmakedefine01 BUILD_PRELU": "#define BUILD_PRELU 0",
+    "#cmakedefine01 BUILD_REDUCTION": "#define BUILD_REDUCTION 0",
+    "#cmakedefine01 BUILD_REORDER": "#define BUILD_REORDER 0",
+    "#cmakedefine01 BUILD_RESAMPLING": "#define BUILD_RESAMPLING 0",
+    "#cmakedefine01 BUILD_RNN": "#define BUILD_RNN 0",
+    "#cmakedefine01 BUILD_SHUFFLE": "#define BUILD_SHUFFLE 0",
+    "#cmakedefine01 BUILD_SOFTMAX": "#define BUILD_SOFTMAX 0",
+    "#cmakedefine01 BUILD_SUM": "#define BUILD_SUM 0",
 }
 
 template_rule(
@@ -28,7 +51,7 @@ template_rule(
     out = "include/oneapi/dnnl/dnnl_version.h",
     substitutions = {
         "@DNNL_VERSION_MAJOR@": "2",
-        "@DNNL_VERSION_MINOR@": "3",
+        "@DNNL_VERSION_MINOR@": "4",
         "@DNNL_VERSION_PATCH@": "0",
         "@DNNL_VERSION_HASH@": "N/A",
     },
@@ -77,7 +100,6 @@ cc_library(
     ],
     visibility = ["//visibility:public"],
     deps = [
-        "@compute_library//:arm_compute_graph",
-        "@compute_library//:arm_compute_runtime",
+        "@compute_library//:arm_compute",
     ],
 )
diff --git a/third_party/compute_library/BUILD b/third_party/compute_library/BUILD
index 59cdbf67fb1..0d9a5826539 100644
--- a/third_party/compute_library/BUILD
+++ b/third_party/compute_library/BUILD
@@ -11,28 +11,153 @@ cc_library(
 )

 cc_library(
-    name = "arm_compute_core",
+    name = "arm_compute_sve",
     srcs = glob(
         [
-            "src/core/*.cpp",
-            "src/core/helpers/*.cpp",
-            "src/core/CPP/**/*.cpp",
-            "src/core/utils/**/*.cpp",
-            "src/core/NEON/kernels/**/*.cpp",
-            "src/core/cpu/kernels/*.cpp",
-            "src/core/cpu/kernels/**/*.cpp",
-            "src/core/**/*.hpp",
-            "**/*.h",
-        ],
-        exclude = ["src/core/TracePoint.cpp"],
-    ),
+	     "**/*.h"
+	 ]
+    ) + [
+            "src/core/NEON/kernels/arm_conv/depthwise/interleaves/sve_s8q_3x3_dot.cpp",
+            "src/core/NEON/kernels/arm_gemm/kernels/sve_interleaved_fp32_mla_8x3VL/a64fx.cpp",
+            "src/core/NEON/kernels/arm_gemm/kernels/sve_interleaved_s8s32_dot_8x3VL/a64fx.cpp",
+            "src/core/NEON/kernels/arm_conv/pooling/kernels/sve_fp16_nhwc_max_2x2_s1_output2x2_depthfirst/generic.cpp",
+            "src/core/NEON/kernels/arm_gemm/kernels/sve_hybrid_u8u32_mmla_6x4VL/generic.cpp",
+            "src/core/NEON/kernels/arm_conv/pooling/kernels/sve_s8_nhwc_max_generic_depthfirst/generic.cpp",
+            "src/core/NEON/kernels/arm_conv/depthwise/kernels/sve_fp16_nhwc_3x3_s2_output2x2_mla_depthfirst/generic_indirect.cpp",
+            "src/core/cpu/kernels/elementwise/sve/elementwise_unary.cpp",
+            "src/core/NEON/kernels/arm_conv/depthwise/kernels/sve_fp32_nhwc_3x3_s1_output3x3_mla_depthfirst/generic_indirect.cpp",
+            "src/core/NEON/kernels/arm_gemm/kernels/sve_interleaved_bf16fp32_dot_8x3VL/generic.cpp",
+            "src/core/NEON/kernels/arm_gemm/kernels/sve_hybrid_u8qa_mmla_4x4VL/generic.cpp",
+            "src/core/NEON/kernels/arm_conv/depthwise/kernels/sve_fp32_packed_to_nhwc_generic_with_multiplier_output2x8_mla_depthfirst/generic.cpp",
+            "src/core/NEON/kernels/arm_conv/depthwise/kernels/sve_u8q_nhwc_3x3_s2_output2x2_mla_depthfirst/generic.cpp",
+            "src/core/cpu/kernels/activation/sve/qasymm8.cpp",
+            "src/core/NEON/kernels/arm_gemm/kernels/sve_hybrid_fp32_mla_6x4VL/generic.cpp",
+            "src/core/NEON/kernels/arm_conv/depthwise/kernels/sve_u8q_nhwc_5x5_s1_output2x2_mla_depthfirst/generic.cpp",
+            "src/core/NEON/kernels/arm_gemm/kernels/sve_hybrid_bf16fp32_mmla_6x4VL/generic.cpp",
+            "src/core/NEON/kernels/arm_conv/pooling/kernels/sve_s8_nhwc_avg_generic_depthfirst/generic.cpp",
+            "src/core/NEON/kernels/arm_conv/depthwise/kernels/sve_fp32_nhwc_3x3_s1_output2x2_mla_depthfirst/generic_direct.cpp",
+            "src/core/NEON/kernels/arm_conv/pooling/kernels/sve_fp32_nhwc_avg_generic_depthfirst/generic.cpp",
+            "src/core/NEON/kernels/arm_conv/depthwise/kernels/sve_s8qs_nhwc_3x3_s1_output2x2_dot_depthfirst/generic.cpp",
+            "src/core/NEON/kernels/arm_conv/depthwise/kernels/sve_s8q_nhwc_3x3_s1_output2x2_mla_depthfirst/generic.cpp",
+            "src/core/NEON/kernels/arm_gemm/kernels/sve_interleaved_s8s32_dot_8x3VL/generic.cpp",
+            "src/core/NEON/kernels/arm_gemm/kernels/sve_hybrid_s8qs_dot_6x4VL/generic.cpp",
+            "src/core/NEON/kernels/arm_gemm/kernels/sve_smallK_hybrid_s8s32_dot_8x1VL/generic.cpp",
+            "src/core/NEON/kernels/arm_gemm/kernels/sve_interleaved_s8s32_mmla_8x3VL/generic.cpp",
+            "src/core/NEON/kernels/arm_gemm/kernels/sve_hybrid_bf16fp32_dot_6x4VL/generic.cpp",
+            "src/core/NEON/kernels/arm_conv/depthwise/kernels/sve_fp32_nhwc_5x5_s1_output2x2_mla_depthfirst/generic_indirect.cpp",
+            "src/core/NEON/kernels/arm_gemm/kernels/sve_hybrid_fp16_mla_6x4VL/generic.cpp",
+            "src/core/NEON/kernels/arm_conv/depthwise/kernels/sve_fp32_packed_to_nhwc_5x5_s1_with_multiplier_output2x4_mla_depthfirst/generic.cpp",
+            "src/core/NEON/kernels/arm_conv/depthwise/kernels/sve_u8s8u8q_nhwc_3x3_s1_output2x2_mla_depthfirst/generic.cpp",
+            "src/core/NEON/kernels/arm_conv/depthwise/kernels/sve_fp32_nhwc_3x3_s1_output3x3_mla_depthfirst/generic_direct.cpp",
+            "src/core/NEON/kernels/arm_conv/depthwise/kernels/sve_fp16_nhwc_3x3_s1_output2x2_mla_depthfirst/generic_indirect.cpp",
+            "src/core/NEON/kernels/arm_gemm/kernels/sve_smallK_hybrid_fp32_mla_8x1VL/generic.cpp",
+            "src/core/NEON/kernels/arm_gemm/kernels/sve_interleaved_u8u32_dot_8x3VL/generic.cpp",
+            "src/core/NEON/kernels/arm_gemm/kernels/sve_hybrid_u8u32_dot_6x4VL/generic.cpp",
+            "src/core/NEON/kernels/arm_conv/pooling/kernels/sve_fp32_nhwc_avg_3x3_s1_output2x2_depthfirst/generic.cpp",
+            "src/core/NEON/kernels/arm_conv/pooling/kernels/sve_u8_nhwc_max_2x2_s1_output2x2_depthfirst/generic.cpp",
+            "src/core/NEON/kernels/arm_conv/depthwise/kernels/sve_fp32_nhwc_3x3_s1_output4x4_mla_depthfirst/generic_indirect.cpp",
+            "src/core/NEON/kernels/arm_conv/depthwise/kernels/sve_fp16_nhwc_3x3_s1_output2x2_mla_depthfirst/generic_direct.cpp",
+            "src/core/NEON/kernels/arm_conv/depthwise/kernels/sve_s8q_nhwc_3x3_s1_output2x2_dot_depthfirst/generic.cpp",
+            "src/core/cpu/kernels/add/sve/qsymm16.cpp",
+            "src/core/NEON/kernels/arm_conv/depthwise/kernels/sve_s8q_nhwc_3x3_s2_output2x2_mla_depthfirst/generic.cpp",
+            "src/core/NEON/kernels/arm_conv/depthwise/kernels/sve_s8q_nhwc_5x5_s1_output2x2_mla_depthfirst/generic.cpp",
+            "src/core/cpu/kernels/elementwise/sve/elementwise.cpp",
+            "src/core/cpu/kernels/activation/sve/qsymm16.cpp",
+            "src/core/cpu/kernels/scale/sve/integer.cpp",
+            "src/core/NEON/kernels/arm_conv/pooling/kernels/sve_u8q_nhwc_max_generic_depthfirst/generic.cpp",
+            "src/core/NEON/kernels/arm_conv/depthwise/kernels/sve_fp32_nhwc_3x3_s1_output2x2_mla_depthfirst/generic.cpp",
+            "src/core/cpu/kernels/add/sve/qasymm8.cpp",
+            "src/core/NEON/kernels/arm_gemm/kernels/sve_hybrid_fp32_mla_8x1VL/a64fx.cpp",
+            "src/core/NEON/kernels/arm_gemm/kernels/sve_smallK_hybrid_u8u32_dot_8x1VL/generic.cpp",
+            "src/core/NEON/kernels/arm_conv/pooling/kernels/sve_u8_nhwc_max_generic_depthfirst/generic.cpp",
+            "src/core/NEON/kernels/arm_conv/pooling/kernels/sve_u8_nhwc_avg_generic_depthfirst/generic.cpp",
+            "src/core/NEON/kernels/arm_gemm/kernels/sve_hybrid_fp32bf16fp32_mmla_6x4VL/generic.cpp",
+            "src/core/NEON/kernels/arm_conv/depthwise/kernels/sve_fp32_nhwc_3x3_s2_output2x2_mla_depthfirst/generic_indirect.cpp",
+            "src/core/NEON/kernels/arm_conv/depthwise/kernels/sve_fp16_nhwc_5x5_s1_output2x2_mla_depthfirst/generic_direct.cpp",
+            "src/core/NEON/kernels/arm_gemm/kernels/sve_hybrid_s8qa_mmla_4x4VL/generic.cpp",
+            "src/core/NEON/kernels/arm_gemm/kernels/sve_interleaved_fp32_mla_8x3VL/generic.cpp",
+            "src/core/NEON/kernels/arm_gemm/mergeresults-sve.cpp",
+            "src/core/NEON/kernels/batchnormalization/impl/SVE/fp16.cpp",
+            "src/core/NEON/kernels/arm_conv/pooling/kernels/sve_fp16_nhwc_avg_generic_depthfirst/generic.cpp",
+            "src/core/NEON/kernels/arm_conv/pooling/kernels/sve_s8_nhwc_max_2x2_s1_output2x2_depthfirst/generic.cpp",
+            "src/core/NEON/kernels/arm_gemm/kernels/sve_hybrid_s8qa_dot_4x4VL/generic.cpp",
+            "src/core/NEON/kernels/arm_conv/depthwise/kernels/sve_fp16_nhwc_3x3_s1_output3x3_mla_depthfirst/generic_indirect.cpp",
+            "src/core/NEON/kernels/arm_conv/pooling/kernels/sve_s8q_nhwc_avg_generic_depthfirst/generic.cpp",
+            "src/core/cpu/kernels/activation/sve/fp32.cpp",
+            "src/core/NEON/kernels/arm_conv/depthwise/kernels/sve_fp16_nhwc_3x3_s1_output4x4_mla_depthfirst/generic_indirect.cpp",
+            "src/core/NEON/kernels/arm_gemm/kernels/sve_interleaved_fp32_mmla_8x3VL/generic.cpp",
+            "src/core/cpu/kernels/activation/sve/qasymm8_signed.cpp",
+            "src/core/NEON/kernels/arm_conv/depthwise/kernels/sve_fp32_packed_to_nhwc_3x3_s2_with_multiplier_output3x3_mla_depthfirst/generic.cpp",
+            "src/core/NEON/kernels/arm_gemm/kernels/sve_hybrid_fp16_mla_6x4VL/a64fx.cpp",
+            "src/core/NEON/kernels/arm_gemm/kernels/sve_interleaved_u8u32_dot_8x3VL/a64fx.cpp",
+            "src/core/NEON/kernels/arm_gemm/kernels/sve_interleaved_fp16_mla_8x3VL/a64fx.cpp",
+            "src/core/cpu/kernels/scale/sve/qasymm8_signed.cpp",
+            "src/core/cpu/kernels/activation/sve/fp16.cpp",
+            "src/core/NEON/kernels/arm_gemm/kernels/sve_hybrid_fp32_mla_6x4VL/a64fx.cpp",
+            "src/core/NEON/kernels/arm_gemm/kernels/sve_interleaved_fp16_mla_8x3VL/generic.cpp",
+            "src/core/NEON/kernels/arm_gemm/kernels/sve_hybrid_s8s32_dot_6x4VL/generic.cpp",
+            "src/core/NEON/kernels/arm_conv/depthwise/kernels/sve_fp32_nhwc_5x5_s1_output2x2_mla_depthfirst/generic_direct.cpp",
+            "src/core/cpu/kernels/add/sve/qasymm8_signed.cpp",
+            "src/core/NEON/kernels/arm_conv/depthwise/kernels/sve_u8s8u8q_nhwc_3x3_s2_output2x2_mla_depthfirst/generic.cpp",
+            "src/core/NEON/kernels/arm_conv/pooling/kernels/sve_fp16_nhwc_max_generic_depthfirst/generic.cpp",
+            "src/core/NEON/kernels/arm_conv/depthwise/kernels/sve_s8q_packed_to_nhwc_3x3_s2_with_multiplier_output2x4_dot_depthfirst/generic.cpp",
+            "src/core/NEON/kernels/arm_conv/depthwise/kernels/sve_u8s8u8q_nhwc_5x5_s1_output2x2_mla_depthfirst/generic.cpp",
+            "src/core/NEON/kernels/arm_gemm/kernels/sve_hybrid_s8s32_mmla_6x4VL/generic.cpp",
+            "src/core/NEON/kernels/arm_conv/depthwise/kernels/sve_fp32_nhwc_generic_output9_mla_depthfirst/generic.cpp",
+            "src/core/NEON/kernels/arm_conv/depthwise/kernels/sve_fp16_nhwc_3x3_s1_output3x3_mla_depthfirst/generic_direct.cpp",
+            "src/core/NEON/kernels/arm_gemm/kernels/sve_interleaved_bf16fp32_mmla_8x3VL/generic.cpp",
+            "src/core/NEON/kernels/arm_conv/depthwise/kernels/sve_fp16_nhwc_3x3_s1_output4x4_mla_depthfirst/generic_direct.cpp",
+            "src/core/NEON/kernels/arm_conv/depthwise/kernels/sve_fp16_nhwc_5x5_s1_output2x2_mla_depthfirst/generic_indirect.cpp",
+            "src/core/NEON/kernels/arm_gemm/transform-sve.cpp",
+            "src/core/NEON/kernels/arm_conv/pooling/kernels/sve_u8q_nhwc_avg_generic_depthfirst/generic.cpp",
+            "src/core/NEON/kernels/arm_gemm/kernels/sve_interleaved_u8u32_mmla_8x3VL/generic.cpp",
+            "src/core/NEON/kernels/arm_conv/depthwise/interleaves/sve_u8q_3x3_dot.cpp",
+            "src/core/NEON/kernels/arm_conv/depthwise/kernels/sve_fp16_nhwc_3x3_s2_output2x2_mla_depthfirst/generic_direct.cpp",
+            "src/core/NEON/kernels/arm_gemm/kernels/sve_hybrid_s8qs_mmla_6x4VL/generic.cpp",
+            "src/core/cpu/kernels/scale/sve/fp16.cpp",
+            "src/core/NEON/kernels/arm_conv/pooling/kernels/sve_fp32_nhwc_max_2x2_s1_output2x2_depthfirst/generic.cpp",
+            "src/core/NEON/kernels/arm_conv/depthwise/kernels/sve_fp32_nhwc_3x3_s1_output2x2_mla_depthfirst_strided/generic.cpp",
+            "src/core/cpu/kernels/add/sve/impl.cpp",
+            "src/core/cpu/kernels/scale/sve/fp32.cpp",
+            "src/core/NEON/kernels/arm_conv/depthwise/kernels/sve_fp32_nhwc_3x3_s1_output4x4_mla_depthfirst/generic_direct.cpp",
+            "src/core/cpu/kernels/scale/sve/qasymm8.cpp",
+            "src/core/NEON/kernels/arm_conv/depthwise/kernels/sve_u8q_nhwc_3x3_s1_output2x2_mla_depthfirst/generic.cpp",
+            "src/core/NEON/kernels/arm_gemm/kernels/sve_hybrid_u8qa_dot_4x4VL/generic.cpp",
+            "src/core/NEON/kernels/batchnormalization/impl/SVE/fp32.cpp",
+            "src/core/NEON/kernels/arm_gemm/kernels/sve_hybrid_fp32_mla_8x1VL/generic.cpp",
+            "src/core/NEON/kernels/arm_conv/depthwise/kernels/sve_u8q_packed_to_nhwc_3x3_s2_with_multiplier_output2x4_dot_depthfirst/generic.cpp",
+            "src/core/NEON/kernels/arm_conv/depthwise/kernels/sve_fp32_nhwc_3x3_s2_output2x2_mla_depthfirst/generic_direct.cpp",
+            "src/core/NEON/kernels/arm_gemm/kernels/sve_hybrid_fp32bf16fp32_mmla_4x6VL/generic.cpp",
+            "src/core/NEON/kernels/arm_gemm/kernels/sve_hybrid_s8s32_dot_6x4VL/a64fx.cpp",
+            "src/core/NEON/kernels/arm_conv/pooling/kernels/sve_fp32_nhwc_max_generic_depthfirst/generic.cpp",
+            "src/core/NEON/kernels/arm_conv/depthwise/kernels/sve_fp32_nhwc_3x3_s1_output2x2_mla_depthfirst/generic_indirect.cpp",
+            "src/core/NEON/kernels/arm_conv/depthwise/kernels/sve_s8q_packed_to_nhwc_5x5_s1_with_multiplier_output4x2_dot_depthfirst/generic.cpp",
+            "src/core/NEON/kernels/arm_conv/depthwise/kernels/sve_u8q_nhwc_3x3_s1_output2x2_dot_depthfirst/generic.cpp",
+            "src/core/cpu/kernels/softmax/impl/sve/impl.cpp",
+            "src/core/NEON/kernels/arm_conv/pooling/kernels/sve_s8q_nhwc_max_generic_depthfirst/generic.cpp",
+            "src/core/NEON/kernels/arm_conv/depthwise/kernels/sve_u8q_packed_to_nhwc_5x5_s1_with_multiplier_output4x2_dot_depthfirst/generic.cpp",
+            "src/core/NEON/kernels/arm_gemm/kernels/sve_hybrid_u8u32_dot_6x4VL/a64fx.cpp",
+            "src/core/NEON/kernels/arm_conv/pooling/kernels/sve_fp16_nhwc_avg_3x3_s1_output2x2_depthfirst/generic.cpp",
+    ],
     hdrs = glob([
+        "arm_compute/runtime/**/*.h",
+        "arm_compute/runtime/*.h",
         "arm_compute/core/**/*.h",
         "**/*.inl",
     ]) + [
         "arm_compute_version.embed",
     ],
     defines = [
+        "ARM_COMPUTE_CPP_SCHEDULER",
+        "ARM_COMPUTE_CPU_ENABLED",
+        "ENABLE_NEON",
+        "ARM_COMPUTE_ENABLE_NEON",
+        "ENABLE_SVE",
+        "ARM_COMPUTE_ENABLE_SVE",
+        "ARM_COMPUTE_ENABLE_FP16",
+        "ARM_COMPUTE_ENABLE_BF16",
+        "ARM_COMPUTE_ENABLE_I8MM",
+        "ARM_COMPUTE_ENABLE_SVEF32MM",
         "ENABLE_FP16_KERNELS",
         "ENABLE_FP32_KERNELS",
         "ENABLE_QASYMM8_KERNELS",
@@ -42,49 +167,555 @@ cc_library(
         "ENABLE_NHWC_KERNELS",
     ],
     includes = [
+        "src/core/cpu/kernels/assembly",
+        "src/core/NEON/kernels/arm_gemm",
         "src/core/NEON/kernels/assembly",
         "src/core/NEON/kernels/convolution/common",
         "src/core/NEON/kernels/convolution/winograd",
         "arm_compute/runtime",
     ],
+    linkopts = ["-lpthread"],
+    copts = ["-march=armv8.2-a+sve"],
     deps = ["include"],
 )

+
 cc_library(
-    name = "arm_compute_runtime",
-    srcs = glob([
-        "src/runtime/*.cpp",
-        "src/runtime/CPP/**/*.cpp",
-        "src/runtime/NEON/**/*.cpp",
-        "src/runtime/cpu/**/*.cpp",
-        "**/*.h",
-    ]),
+    name = "arm_compute",
+    srcs = glob(
+	[
+             "**/*.h",
+        ],
+        exclude = ["src/core/TracePoint.cpp", "*sve*"],
+    ) + [
+            "src/common/cpuinfo/CpuInfo.cpp",
+            "src/common/cpuinfo/CpuModel.cpp",
+            "src/common/cpuinfo/CpuIsaInfo.cpp",
+            "src/common/utils/LegacySupport.cpp",
+            "src/common/AllocatorWrapper.cpp",
+            "src/common/ITensorV2.cpp",
+            "src/common/TensorPack.cpp",
+            "src/common/IOperator.cpp",
+            "src/core/AccessWindowAutoPadding.cpp",
+            "src/core/AccessWindowStatic.cpp",
+            "src/core/AccessWindowTranspose.cpp",
+            "src/core/Error.cpp",
+            "src/core/GPUTarget.cpp",
+            "src/core/Helpers.cpp",
+            "src/core/IAccessWindow.cpp",
+            "src/core/IKernel.cpp",
+            "src/core/ITensor.cpp",
+            "src/core/ITensorPack.cpp",
+            "src/core/Rounding.cpp",
+            "src/core/Size2D.cpp",
+            "src/core/SubTensorInfo.cpp",
+            "src/core/TensorInfo.cpp",
+            "src/core/Utils.cpp",
+            "src/core/Validate.cpp",
+            "src/core/Version.cpp",
+            "src/core/helpers/SoftmaxHelpers.cpp",
+            "src/core/helpers/WindowHelpers.cpp",
+            "src/core/utils/AssemblyUtils.cpp",
+            "src/core/utils/ScaleUtils.cpp",
+            "src/core/utils/helpers/fft.cpp",
+            "src/core/utils/helpers/tensor_transform.cpp",
+            "src/core/utils/io/FileHandler.cpp",
+            "src/core/utils/misc/MMappedFile.cpp",
+            "src/core/utils/quantization/AsymmHelpers.cpp",
+            "src/core/CPP/CPPTypes.cpp",
+            "src/core/CPP/kernels/CPPBoxWithNonMaximaSuppressionLimitKernel.cpp",
+            "src/core/CPP/kernels/CPPNonMaximumSuppressionKernel.cpp",
+            "src/core/CPP/kernels/CPPPermuteKernel.cpp",
+            "src/core/CPP/kernels/CPPTopKVKernel.cpp",
+            "src/core/CPP/kernels/CPPUpsampleKernel.cpp",
+            "src/runtime/Allocator.cpp",
+            "src/runtime/BlobLifetimeManager.cpp",
+            "src/runtime/BlobMemoryPool.cpp",
+            "src/runtime/ISimpleLifetimeManager.cpp",
+            "src/runtime/ITensorAllocator.cpp",
+            "src/runtime/IWeightsManager.cpp",
+            "src/runtime/IScheduler.cpp",
+            "src/runtime/Memory.cpp",
+            "src/runtime/MemoryManagerOnDemand.cpp",
+            "src/runtime/OffsetLifetimeManager.cpp",
+            "src/runtime/OffsetMemoryPool.cpp",
+            "src/runtime/OperatorTensor.cpp",
+            "src/runtime/PoolManager.cpp",
+            "src/runtime/RuntimeContext.cpp",
+            "src/runtime/Scheduler.cpp",
+            "src/runtime/SchedulerFactory.cpp",
+            "src/runtime/SchedulerUtils.cpp",
+            "src/runtime/SubTensor.cpp",
+            "src/runtime/Tensor.cpp",
+            "src/runtime/TensorAllocator.cpp",
+            "src/runtime/Utils.cpp",
+            "src/runtime/CPP/ICPPSimpleFunction.cpp",
+            "src/runtime/CPP/functions/CPPBoxWithNonMaximaSuppressionLimit.cpp",
+            "src/runtime/CPP/functions/CPPDetectionOutputLayer.cpp",
+            "src/runtime/CPP/functions/CPPDetectionPostProcessLayer.cpp",
+            "src/runtime/CPP/functions/CPPNonMaximumSuppression.cpp",
+            "src/runtime/CPP/functions/CPPPermute.cpp",
+            "src/runtime/CPP/functions/CPPTopKV.cpp",
+            "src/runtime/CPP/functions/CPPUpsample.cpp",
+            "src/c/AclContext.cpp",
+            "src/c/AclOperator.cpp",
+            "src/c/AclQueue.cpp",
+            "src/c/AclTensor.cpp",
+            "src/c/AclTensorPack.cpp",
+            "src/c/AclVersion.cpp",
+            "src/c/operators/AclActivation.cpp",
+            "src/runtime/CPP/SingleThreadScheduler.cpp",
+            "src/runtime/CPP/CPPScheduler.cpp",
+            "src/cpu/CpuContext.cpp",
+            "src/cpu/CpuQueue.cpp",
+            "src/cpu/CpuTensor.cpp",
+            "src/core/NEON/kernels/NEFillBorderKernel.cpp",
+            "src/runtime/NEON/INEOperator.cpp",
+            "src/runtime/NEON/INESimpleFunction.cpp",
+            "src/runtime/NEON/INESimpleFunctionNoBorder.cpp",
+            "src/core/cpu/kernels/CpuConcatenateDepthKernel.cpp",
+            "src/runtime/NEON/functions/NECropResize.cpp",
+            "src/core/NEON/kernels/NERangeKernel.cpp",
+            "src/core/NEON/kernels/arm_conv/pooling/pooling_s8.cpp",
+            "src/core/cpu/kernels/CpuElementwiseUnaryKernel.cpp",
+            "src/core/cpu/kernels/CpuGemmMatrixAdditionKernel.cpp",
+            "src/core/NEON/kernels/NEStackLayerKernel.cpp",
+            "src/core/NEON/kernels/convolution/winograd/winograd_transforms/input_6x6_fp16_fp16_integers.cpp",
+            "src/runtime/NEON/functions/NEGEMMConv2d.cpp",
+            "src/runtime/cpu/operators/CpuSub.cpp",
+            "src/core/NEON/kernels/arm_conv/pooling/pooling_s8q.cpp",
+            "src/runtime/NEON/functions/NEPoolingLayer.cpp",
+            "src/core/NEON/kernels/NEFFTDigitReverseKernel.cpp",
+            "src/core/cpu/kernels/CpuDequantizeKernel.cpp",
+            "src/runtime/NEON/functions/NEGenerateProposalsLayer.cpp",
+            "src/core/NEON/kernels/arm_conv/pooling/pooling_fp16.cpp",
+            "src/runtime/NEON/functions/NEConvertFullyConnectedWeights.cpp",
+            "src/core/NEON/kernels/convolution/winograd/padding.cpp",
+            "src/core/cpu/kernels/CpuSoftmaxKernel.cpp",
+            "src/runtime/NEON/functions/NEROIAlignLayer.cpp",
+            "src/runtime/NEON/functions/NEConcatenateLayer.cpp",
+            "src/core/cpu/kernels/CpuIm2ColKernel.cpp",
+            "src/runtime/NEON/functions/NEBatchNormalizationLayer.cpp",
+            "src/core/NEON/kernels/convolution/common/qasymm8.cpp",
+            "src/core/cpu/kernels/CpuGemmLowpMatrixReductionKernel.cpp",
+            "src/core/NEON/kernels/NEBitwiseAndKernel.cpp",
+            "src/core/NEON/kernels/NEROIPoolingLayerKernel.cpp",
+            "src/runtime/NEON/functions/NEDepthwiseConvolutionLayer.cpp",
+            "src/runtime/NEON/functions/NETranspose.cpp",
+            "src/core/NEON/kernels/NEPadLayerKernel.cpp",
+            "src/core/NEON/kernels/NEBatchNormalizationLayerKernel.cpp",
+            "src/core/NEON/kernels/convolution/winograd/winograd_transforms/weights_4x4_3x3_fp32_fp32_integers.cpp",
+            "src/runtime/NEON/functions/NEDequantizationLayer.cpp",
+            "src/runtime/NEON/functions/NEL2NormalizeLayer.cpp",
+            "src/core/NEON/kernels/convolution/winograd/winograd_transforms/output_2_7_fp32_fp32_integers.cpp",
+            "src/runtime/NEON/functions/NEDeconvolutionLayer.cpp",
+            "src/core/cpu/kernels/CpuWinogradConv2dKernel.cpp",
+            "src/runtime/NEON/functions/NESplit.cpp",
+            "src/runtime/cpu/operators/CpuPermute.cpp",
+            "src/runtime/NEON/functions/NEPixelWiseMultiplication.cpp",
+            "src/core/cpu/kernels/CpuDepthwiseConv2dNativeKernel.cpp",
+            "src/core/NEON/kernels/arm_conv/depthwise/depthwise_fp32.cpp",
+            "src/core/NEON/kernels/NEReverseKernel.cpp",
+            "src/core/NEON/kernels/arm_gemm/gemm_int8.cpp",
+            "src/core/NEON/kernels/convolution/winograd/winograd.cpp",
+            "src/runtime/cpu/operators/CpuTranspose.cpp",
+            "src/core/NEON/kernels/arm_gemm/gemm_quint8.cpp",
+            "src/core/cpu/kernels/CpuConvertQuantizedSignednessKernel.cpp",
+            "src/runtime/cpu/operators/CpuConvertFullyConnectedWeights.cpp",
+            "src/runtime/cpu/operators/CpuElementwiseUnary.cpp",
+            "src/core/cpu/kernels/CpuGemmLowpQuantizeDownInt32ToInt16ScaleByFixedPointKernel.cpp",
+            "src/core/NEON/kernels/arm_gemm/gemm_fp32.cpp",
+            "src/core/cpu/kernels/CpuWeightsReshapeKernel.cpp",
+            "src/core/cpu/kernels/CpuGemmLowpOffsetContributionOutputStageKernel.cpp",
+            "src/core/cpu/kernels/CpuScaleKernel.cpp",
+            "src/runtime/cpu/operators/CpuConv2d.cpp",
+            "src/core/cpu/kernels/CpuGemmLowpMatrixMultiplyKernel.cpp",
+            "src/core/NEON/kernels/arm_gemm/misc.cpp",
+            "src/runtime/NEON/functions/NEReduceMean.cpp",
+            "src/runtime/NEON/functions/NEDepthToSpaceLayer.cpp",
+            "src/runtime/NEON/functions/NEWinogradConvolutionLayer.cpp",
+            "src/core/cpu/kernels/CpuPermuteKernel.cpp",
+            "src/core/NEON/kernels/NEDepthToSpaceLayerKernel.cpp",
+            "src/core/NEON/kernels/arm_conv/pooling/pooling_u8.cpp",
+            "src/core/NEON/kernels/arm_gemm/interleave_indirect.cpp",
+            "src/core/NEON/kernels/arm_gemm/gemm_fp16.cpp",
+            "src/runtime/NEON/functions/NEMaxUnpoolingLayer.cpp",
+            "src/core/NEON/kernels/NENormalizationLayerKernel.cpp",
+            "src/core/cpu/kernels/CpuCol2ImKernel.cpp",
+            "src/runtime/NEON/functions/NEFFT2D.cpp",
+            "src/core/NEON/kernels/NECropKernel.cpp",
+            "src/runtime/NEON/functions/NEElementwiseUnaryLayer.cpp",
+            "src/runtime/NEON/functions/NEArgMinMaxLayer.cpp",
+            "src/runtime/NEON/functions/NEFFTConvolutionLayer.cpp",
+            "src/core/NEON/kernels/NEPriorBoxLayerKernel.cpp",
+            "src/core/cpu/kernels/CpuGemmLowpQuantizeDownInt32ScaleKernel.cpp",
+            "src/core/NEON/kernels/NEReductionOperationKernel.cpp",
+            "src/runtime/NEON/functions/NEElementwiseOperations.cpp",
+            "src/runtime/cpu/operators/CpuActivation.cpp",
+            "src/core/NEON/kernels/arm_gemm/gemm_qint8.cpp",
+            "src/core/cpu/kernels/CpuCopyKernel.cpp",
+            "src/runtime/NEON/functions/NEPriorBoxLayer.cpp",
+            "src/core/cpu/kernels/CpuFloorKernel.cpp",
+            "src/runtime/NEON/functions/NEBitwiseAnd.cpp",
+            "src/core/cpu/kernels/internal/CpuDepthwiseConv2dAssemblyWrapperKernel.cpp",
+            "src/core/NEON/kernels/arm_conv/depthwise/depthwise_fp16.cpp",
+            "src/core/NEON/kernels/arm_gemm/rowsum_indirect_u8.cpp",
+            "src/runtime/NEON/functions/NEScale.cpp",
+            "src/runtime/cpu/operators/CpuDequantize.cpp",
+            "src/core/cpu/kernels/CpuCastKernel.cpp",
+            "src/runtime/NEON/functions/NEQuantizationLayer.cpp",
+            "src/core/cpu/kernels/CpuGemmLowpQuantizeDownInt32ToInt8ScaleByFixedPointKernel.cpp",
+            "src/core/NEON/kernels/NESpaceToDepthLayerKernel.cpp",
+            "src/runtime/cpu/operators/CpuFlatten.cpp",
+            "src/core/NEON/kernels/arm_conv/pooling/pooling_fp32.cpp",
+            "src/runtime/NEON/functions/NESpaceToBatchLayer.cpp",
+            "src/runtime/cpu/operators/CpuDirectConv2d.cpp",
+            "src/core/NEON/kernels/NEFuseBatchNormalizationKernel.cpp",
+            "src/runtime/NEON/functions/NEROIPoolingLayer.cpp",
+            "src/core/NEON/kernels/NEBatchToSpaceLayerKernel.cpp",
+            "src/runtime/NEON/functions/NESlice.cpp",
+            "src/core/cpu/kernels/CpuGemmMatrixMultiplyKernel.cpp",
+            "src/core/NEON/kernels/convolution/winograd/winograd_transforms/weights_4_5_fp32_fp32_integers.cpp",
+            "src/core/NEON/kernels/convolution/winograd/winograd_transforms/input_6x6_fp32_fp32_integers.cpp",
+            "src/core/NEON/kernels/convolution/winograd/winograd_transforms/output_2x2_3x3_fp32_fp32_integers.cpp",
+            "src/core/cpu/kernels/CpuGemmTranspose1xWKernel.cpp",
+            "src/runtime/cpu/operators/CpuGemmLowpOutputStage.cpp",
+            "src/runtime/cpu/operators/CpuElementwise.cpp",
+            "src/runtime/NEON/functions/NEGEMMConvolutionLayer.cpp",
+            "src/core/NEON/kernels/arm_gemm/gemm_uint16.cpp",
+            "src/runtime/cpu/operators/CpuConcatenate.cpp",
+            "src/runtime/NEON/functions/NEBoundingBoxTransform.cpp",
+            "src/runtime/NEON/functions/NEDepthConvertLayer.cpp",
+            "src/core/NEON/kernels/NEInstanceNormalizationLayerKernel.cpp",
+            "src/runtime/NEON/functions/NEReorgLayer.cpp",
+            "src/core/NEON/kernels/convolution/common/padding.cpp",
+            "src/core/NEON/kernels/arm_gemm/transform.cpp",
+            "src/core/NEON/kernels/NEFFTRadixStageKernel.cpp",
+            "src/runtime/NEON/functions/NEGEMMLowpOutputStage.cpp",
+            "src/core/NEON/kernels/NESpaceToBatchLayerKernel.cpp",
+            "src/runtime/NEON/functions/NEActivationLayer.cpp",
+            "src/core/NEON/kernels/NELogicalKernel.cpp",
+            "src/core/NEON/kernels/arm_gemm/gemm_int16.cpp",
+            "src/core/NEON/kernels/NETileKernel.cpp",
+            "src/runtime/NEON/functions/NELSTMLayerQuantized.cpp",
+            "src/runtime/NEON/functions/NEDetectionPostProcessLayer.cpp",
+            "src/core/cpu/kernels/internal/CpuPool2dAssemblyWrapperKernel.cpp",
+            "src/runtime/NEON/functions/NEFullyConnectedLayer.cpp",
+            "src/core/NEON/kernels/convolution/winograd/winograd_transforms/output_4x4_3x3_fp16_fp16_integers.cpp",
+            "src/runtime/NEON/functions/NEFill.cpp",
+            "src/core/cpu/kernels/CpuActivationKernel.cpp",
+            "src/core/cpu/kernels/CpuConcatenateWidthKernel.cpp",
+            "src/core/NEON/kernels/convolution/winograd/winograd_transforms/weights_6_3_fp32_fp32_integers.cpp",
+            "src/runtime/cpu/operators/CpuGemmDirectConv2d.cpp",
+            "src/runtime/cpu/operators/CpuCopy.cpp",
+            "src/runtime/NEON/functions/NEStackLayer.cpp",
+            "src/runtime/NEON/functions/NEReverse.cpp",
+            "src/core/NEON/kernels/NEBoundingBoxTransformKernel.cpp",
+            "src/runtime/NEON/functions/NEBitwiseNot.cpp",
+            "src/core/cpu/kernels/CpuSubKernel.cpp",
+            "src/core/NEON/kernels/convolution/winograd/winograd_transforms/input_4x4_fp32_fp32_integers.cpp",
+            "src/core/cpu/kernels/CpuGemmLowpOffsetContributionKernel.cpp",
+            "src/core/NEON/kernels/arm_conv/depthwise/depthwise_u8s8u8q.cpp",
+            "src/core/NEON/kernels/NEGatherKernel.cpp",
+            "src/core/NEON/kernels/convolution/winograd/winograd_transforms/output_2x2_5x5_fp32_fp32_integers.cpp",
+            "src/core/NEON/kernels/convolution/common/qsymm8.cpp",
+            "src/core/cpu/kernels/CpuQuantizeKernel.cpp",
+            "src/runtime/NEON/functions/NERemap.cpp",
+            "src/core/NEON/kernels/arm_gemm/quantized.cpp",
+            "src/runtime/NEON/functions/NEMeanStdDevNormalizationLayer.cpp",
+            "src/core/NEON/kernels/arm_gemm/rowsum_indirect_s8.cpp",
+            "src/runtime/cpu/operators/CpuWinogradConv2d.cpp",
+            "src/runtime/cpu/operators/CpuReshape.cpp",
+            "src/core/cpu/kernels/CpuGemmInterleave4x4Kernel.cpp",
+            "src/core/NEON/kernels/arm_gemm/gemm_uint8.cpp",
+            "src/core/NEON/kernels/convolution/winograd/winograd_transforms/weights_2_7_fp32_fp32_integers.cpp",
+            "src/core/NEON/kernels/NEBitwiseNotKernel.cpp",
+            "src/core/NEON/kernels/arm_conv/depthwise/depthwise_s8q.cpp",
+            "src/core/NEON/kernels/NEMeanStdDevNormalizationKernel.cpp",
+            "src/runtime/cpu/operators/internal/CpuGemmAssemblyDispatch.cpp",
+            "src/runtime/NEON/functions/NEBatchToSpaceLayer.cpp",
+            "src/runtime/NEON/functions/NEReductionOperation.cpp",
+            "src/runtime/NEON/functions/NEFloor.cpp",
+            "src/runtime/NEON/functions/NEFlattenLayer.cpp",
+            "src/core/cpu/kernels/CpuDirectConv2dOutputStageKernel.cpp",
+            "src/core/NEON/kernels/convolution/common/utils.cpp",
+            "src/core/cpu/kernels/CpuDirectConv2dKernel.cpp",
+            "src/core/NEON/kernels/convolution/winograd/winograd_transforms/weights_2x2_5x5_fp32_fp32_integers.cpp",
+            "src/runtime/NEON/functions/NEReshapeLayer.cpp",
+            "src/core/NEON/kernels/arm_conv/pooling/kernels/cpp_nhwc_1x1_stride_any_depthfirst/generic.cpp",
+            "src/runtime/NEON/functions/NEGEMM.cpp",
+            "src/core/NEON/kernels/NEBitwiseOrKernel.cpp",
+            "src/runtime/cpu/operators/CpuFullyConnected.cpp",
+            "src/core/cpu/kernels/CpuTransposeKernel.cpp",
+            "src/runtime/NEON/functions/NESelect.cpp",
+            "src/runtime/NEON/functions/NELSTMLayer.cpp",
+            "src/core/NEON/kernels/NEL2NormalizeLayerKernel.cpp",
+            "src/runtime/NEON/functions/NEChannelShuffleLayer.cpp",
+            "src/core/cpu/kernels/CpuPool2dKernel.cpp",
+            "src/core/NEON/kernels/arm_gemm/mergeresults.cpp",
+            "src/core/NEON/kernels/NESelectKernel.cpp",
+            "src/runtime/NEON/functions/NEDirectConvolutionLayer.cpp",
+            "src/runtime/cpu/operators/CpuFill.cpp",
+            "src/runtime/cpu/operators/CpuDepthwiseConv2dAssemblyDispatch.cpp",
+            "src/core/NEON/kernels/NEFFTScaleKernel.cpp",
+            "src/runtime/NEON/functions/NERNNLayer.cpp",
+            "src/core/cpu/kernels/CpuGemmLowpQuantizeDownInt32ToUint8ScaleByFixedPointKernel.cpp",
+            "src/core/cpu/kernels/CpuFillKernel.cpp",
+            "src/runtime/NEON/functions/NESoftmaxLayer.cpp",
+            "src/core/NEON/kernels/convolution/winograd/winograd_transforms/weights_4x4_3x3_fp16_fp16_integers.cpp",
+            "src/core/NEON/kernels/convolution/winograd/winograd_transforms/output_4_5_fp32_fp32_integers.cpp",
+            "src/runtime/NEON/functions/NERange.cpp",
+            "src/runtime/cpu/operators/CpuAdd.cpp",
+            "src/runtime/NEON/functions/NEInstanceNormalizationLayer.cpp",
+            "src/runtime/cpu/operators/CpuGemm.cpp",
+            "src/core/NEON/kernels/arm_conv/depthwise/depthwise_u8q.cpp",
+            "src/runtime/NEON/functions/NETile.cpp",
+            "src/core/cpu/kernels/CpuConcatenateHeightKernel.cpp",
+            "src/runtime/cpu/operators/CpuCast.cpp",
+            "src/core/NEON/kernels/NEChannelShuffleLayerKernel.cpp",
+            "src/runtime/NEON/functions/NECast.cpp",
+            "src/runtime/NEON/functions/NEGEMMLowpMatrixMultiplyCore.cpp",
+            "src/core/NEON/kernels/convolution/winograd/winograd_transforms/output_4x4_3x3_fp32_fp32_integers.cpp",
+            "src/runtime/NEON/functions/NEStridedSlice.cpp",
+            "src/runtime/NEON/functions/NEPermute.cpp",
+            "src/runtime/NEON/functions/NESpaceToDepthLayer.cpp",
+            "src/core/NEON/kernels/convolution/winograd/winograd_transforms/output_6_3_fp32_fp32_integers.cpp",
+            "src/core/NEON/kernels/NERemapKernel.cpp",
+            "src/runtime/NEON/functions/NEArithmeticSubtraction.cpp",
+            "src/core/NEON/kernels/NEQLSTMLayerNormalizationKernel.cpp",
+            "src/core/cpu/kernels/CpuConvertFullyConnectedWeightsKernel.cpp",
+            "src/runtime/NEON/functions/NEFFT1D.cpp",
+            "src/runtime/NEON/functions/NECopy.cpp",
+            "src/core/NEON/kernels/NEMaxUnpoolingLayerKernel.cpp",
+            "src/runtime/cpu/operators/CpuGemmLowpMatrixMultiplyCore.cpp",
+            "src/core/cpu/kernels/CpuConcatenateBatchKernel.cpp",
+            "src/runtime/cpu/operators/CpuScale.cpp",
+            "src/runtime/cpu/operators/CpuMul.cpp",
+            "src/core/NEON/kernels/NEStridedSliceKernel.cpp",
+            "src/runtime/NEON/functions/NEBitwiseOr.cpp",
+            "src/runtime/NEON/functions/NELogical.cpp",
+            "src/core/NEON/kernels/arm_gemm/gemm_bf16.cpp",
+            "src/runtime/cpu/operators/CpuDepthwiseConv2d.cpp",
+            "src/runtime/NEON/functions/NEGather.cpp",
+            "src/runtime/NEON/functions/NEPadLayer.cpp",
+            "src/core/cpu/kernels/CpuElementwiseKernel.cpp",
+            "src/runtime/NEON/functions/NEFuseBatchNormalization.cpp",
+            "src/core/NEON/kernels/convolution/winograd/winograd_transforms/input_1x8_fp32_fp32_integers.cpp",
+            "src/core/NEON/kernels/NEROIAlignLayerKernel.cpp",
+            "src/runtime/cpu/operators/CpuSoftmax.cpp",
+            "src/runtime/NEON/functions/NEPReluLayer.cpp",
+            "src/core/NEON/kernels/arm_conv/pooling/pooling_u8q.cpp",
+            "src/runtime/NEON/functions/NEConvolutionLayer.cpp",
+            "src/runtime/cpu/operators/CpuQuantize.cpp",
+            "src/core/cpu/kernels/CpuMulKernel.cpp",
+            "src/core/NEON/kernels/NEReorgLayerKernel.cpp",
+            "src/core/cpu/kernels/CpuReshapeKernel.cpp",
+            "src/runtime/cpu/operators/CpuFloor.cpp",
+            "src/core/NEON/kernels/NEBitwiseXorKernel.cpp",
+            "src/core/NEON/kernels/arm_gemm/mergeresults-fp16.cpp",
+            "src/runtime/cpu/operators/CpuGemmConvolution.cpp",
+            "src/core/cpu/kernels/CpuAddKernel.cpp",
+            "src/runtime/NEON/functions/NEUnstack.cpp",
+            "src/runtime/cpu/operators/CpuPool2d.cpp",
+            "src/core/NEON/kernels/convolution/winograd/winograd_transforms/input_4x4_fp16_fp16_integers.cpp",
+            "src/runtime/NEON/functions/NEArithmeticAddition.cpp",
+            "src/core/NEON/kernels/convolution/winograd/winograd_transforms/weights_2x2_3x3_fp32_fp32_integers.cpp",
+            "src/runtime/NEON/functions/NEQLSTMLayer.cpp",
+            "src/core/NEON/kernels/arm_conv/depthwise/kernels/a64_fp32_packed_to_nhwc_generic_with_multiplier_output2x8_mla_depthfirst/generic.cpp",
+            "src/core/NEON/kernels/arm_gemm/kernels/a64_gemm_s16_8x12/generic.cpp",
+            "src/core/NEON/kernels/arm_gemm/kernels/a64_hybrid_fp32_mla_4x24/generic.cpp",
+            "src/core/NEON/kernels/arm_conv/pooling/kernels/a64_s8_nhwc_max_generic_depthfirst/generic.cpp",
+            "src/core/NEON/kernels/arm_gemm/kernels/a64_sgemv_pretransposed/generic.cpp",
+            "src/core/NEON/kernels/arm_gemm/kernels/a64_hybrid_bf16fp32_dot_6x16/generic.cpp",
+            "src/core/NEON/kernels/arm_gemm/kernels/a64_hybrid_fp32bf16fp32_mmla_6x16/generic.cpp",
+            "src/core/NEON/kernels/arm_conv/depthwise/kernels/a64_fp32_nhwc_5x5_s1_output2x2_mla_depthfirst/generic_indirect.cpp",
+            "src/core/NEON/kernels/arm_conv/depthwise/kernels/a64_u8q_packed_to_nhwc_3x3_s2_with_multiplier_output2x4_dot_depthfirst/generic.cpp",
+            "src/core/NEON/kernels/arm_gemm/kernels/a64_smallK_hybrid_s8s32_dot_6x4/generic.cpp",
+            "src/core/NEON/kernels/arm_conv/pooling/kernels/a64_fp32_nhwc_max_2x2_s1_output2x2_depthfirst/generic.cpp",
+            "src/core/NEON/kernels/arm_gemm/kernels/a64_sgemm_8x12/a53.cpp",
+            "src/core/cpu/kernels/pool2d/neon/fp32.cpp",
+            "src/core/NEON/kernels/arm_gemm/kernels/a64_hybrid_fp32_mla_6x16/a55.cpp",
+            "src/core/NEON/kernels/arm_gemm/kernels/a64_hybrid_fp32_mla_8x4/generic.cpp",
+            "src/core/NEON/kernels/arm_gemm/kernels/a64_gemm_u8_8x12/x1.cpp",
+            "src/core/NEON/kernels/arm_gemm/kernels/a64_gemm_s8_8x12/x1.cpp",
+            "src/core/NEON/kernels/arm_conv/pooling/kernels/a64_fp32_nhwc_max_generic_depthfirst/generic.cpp",
+            "src/core/NEON/kernels/arm_conv/depthwise/kernels/a64_s8q_nhwc_3x3_s2_output2x2_mla_depthfirst/generic.cpp",
+            "src/core/NEON/kernels/arm_conv/depthwise/kernels/a64_s8q_nhwc_3x3_s1_output2x2_mla_depthfirst/generic.cpp",
+            "src/core/NEON/kernels/arm_conv/pooling/kernels/a64_fp16_nhwc_max_2x2_s1_output2x2_depthfirst/generic.cpp",
+            "src/core/NEON/kernels/arm_gemm/kernels/a64_hybrid_fp16_mla_6x32/generic.cpp",
+            "src/core/NEON/kernels/arm_gemm/kernels/a64_hgemm_8x24/generic.cpp",
+            "src/core/NEON/kernels/arm_conv/depthwise/kernels/a64_u8q_nhwc_5x5_s1_output2x2_mla_depthfirst/generic.cpp",
+            "src/core/cpu/kernels/activation/neon/fp32.cpp",
+            "src/core/NEON/kernels/arm_conv/depthwise/kernels/a64_u8q_packed_to_nhwc_5x5_s1_with_multiplier_output4x2_dot_depthfirst/generic.cpp",
+            "src/core/cpu/kernels/sub/neon/qsymm16.cpp",
+            "src/core/cpu/kernels/activation/neon/qasymm8.cpp",
+            "src/core/NEON/kernels/arm_conv/depthwise/kernels/a64_fp32_nhwc_3x3_s2_output2x2_mla_depthfirst/generic_direct.cpp",
+            "src/core/NEON/kernels/arm_conv/depthwise/kernels/a64_fp32_packed_to_nhwc_3x3_s2_with_multiplier_output3x3_mla_depthfirst/generic.cpp",
+            "src/core/NEON/kernels/arm_conv/depthwise/kernels/a64_s8q_packed_to_nhwc_generic_with_multiplier_output2x8_mla_depthfirst/generic.cpp",
+            "src/core/cpu/kernels/scale/neon/fp16.cpp",
+            "src/core/NEON/kernels/arm_conv/depthwise/interleaves/8b_mla.cpp",
+            "src/core/NEON/kernels/arm_conv/depthwise/kernels/a64_fp16_nhwc_3x3_s2_output2x2_mla_depthfirst/generic_direct.cpp",
+            "src/core/NEON/kernels/arm_conv/depthwise/kernels/a64_fp32_nhwc_3x3_s1_output4x4_mla_depthfirst/generic_direct.cpp",
+            "src/core/NEON/kernels/arm_conv/depthwise/interleaves/a64_u8q_3x3_dot.cpp",
+            "src/core/NEON/kernels/arm_gemm/kernels/a64_gemm_s8_8x12/generic.cpp",
+            "src/core/NEON/kernels/arm_conv/depthwise/kernels/a64_fp16_nhwc_generic_output9_mla_depthfirst/generic.cpp",
+            "src/core/NEON/kernels/arm_gemm/kernels/a64_hybrid_fp32_mla_4x24/a55.cpp",
+            "src/core/NEON/kernels/arm_gemm/kernels/a64_smallK_hybrid_u8u32_dot_8x4/generic.cpp",
+            "src/core/NEON/kernels/arm_conv/depthwise/kernels/a64_fp16_nhwc_3x3_s1_output4x4_mla_depthfirst/generic_direct.cpp",
+            "src/core/cpu/kernels/scale/neon/integer.cpp",
+            "src/core/cpu/kernels/activation/neon/qsymm16.cpp",
+            "src/core/cpu/kernels/add/neon/qasymm8.cpp",
+            "src/core/NEON/kernels/arm_conv/depthwise/kernels/a64_u8q_packed_to_nhwc_generic_with_multiplier_output2x8_mla_depthfirst/generic.cpp",
+            "src/core/NEON/kernels/arm_conv/depthwise/kernels/a64_fp32_nhwc_3x3_s2_output2x2_mla_depthfirst/generic_indirect.cpp",
+            "src/core/cpu/kernels/activation/neon/fp16.cpp",
+            "src/core/NEON/kernels/arm_conv/depthwise/kernels/a64_fp32_nhwc_3x3_s1_output3x3_mla_depthfirst/generic_indirect.cpp",
+            "src/core/NEON/kernels/arm_gemm/kernels/a64_hgemm_8x24/x1.cpp",
+            "src/core/NEON/kernels/arm_conv/depthwise/kernels/a64_fp32_nhwc_generic_output9_mla_depthfirst/generic.cpp",
+            "src/core/NEON/kernels/arm_conv/depthwise/kernels/a64_u8s8u8q_nhwc_5x5_s1_output2x2_mla_depthfirst/generic.cpp",
+            "src/core/cpu/kernels/activation/neon/qasymm8_signed.cpp",
+            "src/core/NEON/kernels/arm_conv/pooling/kernels/a64_u8q_nhwc_avg_generic_depthfirst/generic.cpp",
+            "src/core/NEON/kernels/arm_conv/depthwise/kernels/a64_fp16_nhwc_5x5_s1_output2x2_mla_depthfirst/generic_direct.cpp",
+            "src/core/NEON/kernels/arm_gemm/kernels/a64_gemm_u8_4x4/generic.cpp",
+            "src/core/NEON/kernels/arm_conv/depthwise/kernels/a64_fp32_packed_to_nhwc_5x5_s1_with_multiplier_output2x4_mla_depthfirst/generic.cpp",
+            "src/core/cpu/kernels/pool2d/neon/qasymm8_signed.cpp",
+            "src/core/NEON/kernels/arm_conv/depthwise/kernels/a64_s8q_packed_to_nhwc_5x5_s1_with_multiplier_output4x2_dot_depthfirst/generic.cpp",
+            "src/core/NEON/kernels/arm_gemm/kernels/a64_smallK_hybrid_s8s32_dot_8x4/generic.cpp",
+            "src/core/NEON/kernels/arm_gemm/kernels/a64_hybrid_bf16fp32_mmla_6x16/generic.cpp",
+            "src/core/NEON/kernels/arm_gemm/kernels/a64_hybrid_s8s32_dot_6x16/a55.cpp",
+            "src/core/NEON/kernels/arm_gemm/kernels/a64_hybrid_fp32_mla_6x16/generic.cpp",
+            "src/core/NEON/kernels/arm_gemm/kernels/a64_smallK_hybrid_u8u32_dot_6x4/generic.cpp",
+            "src/core/NEON/kernels/arm_gemm/kernels/a64_smallK_hybrid_u8u32_dot_8x4/a55.cpp",
+            "src/core/cpu/kernels/add/neon/qasymm8_signed.cpp",
+            "src/core/NEON/kernels/arm_conv/pooling/kernels/a64_s8q_nhwc_avg_generic_depthfirst/generic.cpp",
+            "src/core/NEON/kernels/arm_conv/pooling/kernels/a64_u8_nhwc_max_generic_depthfirst/generic.cpp",
+            "src/core/NEON/kernels/batchnormalization/impl/NEON/fp16.cpp",
+            "src/core/NEON/kernels/arm_gemm/kernels/a64_hybrid_fp16_mla_6x32/a55.cpp",
+            "src/core/NEON/kernels/arm_gemm/kernels/a64_hybrid_u8u32_dot_6x16/a55.cpp",
+            "src/core/NEON/kernels/arm_conv/depthwise/kernels/a64_u8s8u8q_nhwc_generic_output9_mla_depthfirst/generic.cpp",
+            "src/core/NEON/kernels/arm_gemm/kernels/a64_hybrid_fp32bf16fp32_mmla_4x24/generic.cpp",
+            "src/core/NEON/kernels/arm_conv/depthwise/kernels/a64_fp16_nhwc_3x3_s1_output3x3_mla_depthfirst/generic_indirect.cpp",
+            "src/core/NEON/kernels/arm_conv/pooling/kernels/a64_fp32_nhwc_avg_3x3_s1_output2x2_depthfirst/generic.cpp",
+            "src/core/NEON/kernels/arm_conv/pooling/kernels/a64_fp16_nhwc_avg_generic_depthfirst/generic.cpp",
+            "src/core/NEON/kernels/arm_gemm/kernels/a64_sgemm_8x6/generic.cpp",
+            "src/core/NEON/kernels/arm_conv/depthwise/kernels/a64_fp16_nhwc_3x3_s2_output2x2_mla_depthfirst/generic_indirect.cpp",
+            "src/core/NEON/kernels/arm_conv/depthwise/kernels/a64_fp32_nhwc_3x3_s1_output2x2_mla_depthfirst/generic_direct.cpp",
+            "src/core/NEON/kernels/arm_gemm/kernels/a64_smallK_hybrid_s8s32_dot_6x4/a55.cpp",
+            "src/core/NEON/kernels/arm_conv/depthwise/kernels/a64_fp32_nhwc_3x3_s1_output4x4_mla_depthfirst/generic_indirect.cpp",
+            "src/core/cpu/kernels/pool2d/neon/nchw/all.cpp",
+            "src/core/NEON/kernels/arm_conv/depthwise/kernels/a64_fp16_packed_to_nhwc_generic_with_multiplier_output2x8_mla_depthfirst/generic.cpp",
+            "src/core/NEON/kernels/arm_gemm/kernels/a64_gemm_s8_4x4/generic.cpp",
+            "src/core/NEON/kernels/arm_conv/pooling/kernels/a64_u8_nhwc_max_2x2_s1_output2x2_depthfirst/generic.cpp",
+            "src/core/NEON/kernels/arm_conv/depthwise/kernels/a64_fp32_nhwc_5x5_s1_output2x2_mla_depthfirst/generic_direct.cpp",
+            "src/core/NEON/kernels/arm_conv/depthwise/kernels/a64_u8s8u8q_nhwc_3x3_s2_output2x2_mla_depthfirst/generic.cpp",
+            "src/core/NEON/kernels/arm_conv/depthwise/kernels/a64_u8s8u8q_nhwc_3x3_s1_output2x2_mla_depthfirst/generic.cpp",
+            "src/core/NEON/kernels/arm_conv/depthwise/kernels/a64_s8q_nhwc_generic_output9_mla_depthfirst/generic.cpp",
+            "src/core/NEON/kernels/arm_gemm/kernels/a64_smallK_hybrid_u8u32_dot_6x4/a55.cpp",
+            "src/core/NEON/kernels/arm_conv/pooling/kernels/a64_fp16_nhwc_avg_3x3_s1_output2x2_depthfirst/generic.cpp",
+            "src/core/NEON/kernels/arm_gemm/kernels/a64_sgemm_8x12/a55r1.cpp",
+            "src/core/NEON/kernels/arm_gemm/kernels/a64_sgemm_8x12/generic.cpp",
+            "src/core/NEON/kernels/arm_conv/depthwise/kernels/a64_u8s8u8q_packed_to_nhwc_generic_with_multiplier_output2x8_mla_depthfirst/generic.cpp",
+            "src/core/NEON/kernels/arm_gemm/kernels/a64_hybrid_fp32_mla_8x4/a55.cpp",
+            "src/core/NEON/kernels/arm_conv/depthwise/kernels/a64_s8q_nhwc_5x5_s1_output2x2_mla_depthfirst/generic.cpp",
+            "src/core/NEON/kernels/arm_gemm/kernels/a64_interleaved_u8u32_mmla_8x12/generic.cpp",
+            "src/core/NEON/kernels/arm_conv/depthwise/kernels/a64_fp16_nhwc_3x3_s1_output3x3_mla_depthfirst/generic_direct.cpp",
+            "src/core/cpu/kernels/floor/neon/fp16.cpp",
+            "src/core/NEON/kernels/batchnormalization/impl/NEON/fp32.cpp",
+            "src/core/cpu/kernels/scale/neon/qasymm8.cpp",
+            "src/core/NEON/kernels/arm_conv/depthwise/kernels/a64_fp32_nhwc_3x3_s1_output2x2_mla_depthfirst/generic_indirect.cpp",
+            "src/core/NEON/kernels/arm_gemm/kernels/a64_gemm_u16_8x12/generic.cpp",
+            "src/core/NEON/kernels/arm_conv/pooling/kernels/a64_s8q_nhwc_max_generic_depthfirst/generic.cpp",
+            "src/core/NEON/kernels/arm_gemm/kernels/a64_hybrid_s8qs_dot_6x16/a55.cpp",
+            "src/core/NEON/kernels/arm_gemm/kernels/a64_hybrid_u8qa_dot_4x16/generic.cpp",
+            "src/core/cpu/kernels/sub/neon/qasymm8.cpp",
+            "src/core/NEON/kernels/arm_conv/pooling/kernels/a64_u8q_nhwc_max_generic_depthfirst/generic.cpp",
+            "src/core/NEON/kernels/arm_gemm/kernels/a64_hybrid_u8u32_mmla_6x16/generic.cpp",
+            "src/core/NEON/kernels/arm_conv/pooling/kernels/a64_fp32_nhwc_avg_generic_depthfirst/generic.cpp",
+            "src/core/NEON/kernels/arm_conv/depthwise/kernels/a64_s8qs_nhwc_3x3_s1_output2x2_dot_depthfirst/generic.cpp",
+            "src/core/NEON/kernels/arm_conv/depthwise/kernels/a64_fp16_nhwc_3x3_s1_output2x2_mla_depthfirst/generic_direct.cpp",
+            "src/core/NEON/kernels/arm_gemm/kernels/a64_hybrid_s8s32_mmla_6x16/generic.cpp",
+            "src/core/NEON/kernels/arm_gemm/kernels/a64_hybrid_s8s32_dot_6x16/generic.cpp",
+            "src/core/NEON/kernels/arm_gemm/kernels/a64_smallK_hybrid_fp32_mla_8x4/generic.cpp",
+            "src/core/NEON/kernels/arm_conv/depthwise/kernels/a64_u8q_nhwc_3x3_s1_output2x2_mla_depthfirst/generic.cpp",
+            "src/core/NEON/kernels/arm_gemm/kernels/a64_hybrid_u8qa_dot_4x16/a55.cpp",
+            "src/core/NEON/kernels/arm_conv/depthwise/kernels/a64_s8q_packed_to_nhwc_3x3_s2_with_multiplier_output2x4_dot_depthfirst/generic.cpp",
+            "src/core/NEON/kernels/arm_conv/depthwise/kernels/a64_fp16_nhwc_5x5_s1_output2x2_mla_depthfirst/generic_indirect.cpp",
+            "src/core/NEON/kernels/arm_gemm/kernels/a64_hybrid_s8qa_dot_4x16/generic.cpp",
+            "src/core/NEON/kernels/arm_conv/depthwise/kernels/a64_fp16_nhwc_3x3_s1_output2x2_mla_depthfirst/generic_indirect.cpp",
+            "src/core/cpu/kernels/pool2d/neon/qasymm8.cpp",
+            "src/core/cpu/kernels/scale/neon/qasymm8_signed.cpp",
+            "src/core/NEON/kernels/arm_gemm/kernels/a64_smallK_hybrid_s8s32_dot_8x4/a55.cpp",
+            "src/core/NEON/kernels/arm_gemm/kernels/a64_hybrid_u8u32_dot_6x16/generic.cpp",
+            "src/core/NEON/kernels/arm_gemm/kernels/a64_interleaved_bf16fp32_dot_8x12/generic.cpp",
+            "src/core/NEON/kernels/arm_gemm/kernels/a64_smallK_hybrid_fp32_mla_6x4/generic.cpp",
+            "src/core/NEON/kernels/arm_gemm/kernels/a64_interleaved_s8s32_mmla_8x12/generic.cpp",
+            "src/core/NEON/kernels/arm_conv/depthwise/kernels/a64_u8q_nhwc_generic_output9_mla_depthfirst/generic.cpp",
+            "src/core/NEON/kernels/arm_gemm/kernels/a64_interleaved_bf16fp32_mmla_8x12/generic.cpp",
+            "src/core/NEON/kernels/arm_gemm/kernels/a64_hybrid_s8qs_dot_6x16/generic.cpp",
+            "src/core/NEON/kernels/arm_conv/depthwise/kernels/a64_fp32_nhwc_3x3_s1_output3x3_mla_depthfirst/generic_direct.cpp",
+            "src/core/NEON/kernels/arm_gemm/kernels/a64_interleaved_bf16fp32_dot_8x12/x1.cpp",
+            "src/core/cpu/kernels/sub/neon/qasymm8_signed.cpp",
+            "src/core/NEON/kernels/arm_gemm/kernels/a64_hybrid_s8qa_dot_4x16/a55.cpp",
+            "src/core/NEON/kernels/arm_conv/pooling/kernels/a64_u8_nhwc_avg_generic_depthfirst/generic.cpp",
+            "src/core/NEON/kernels/arm_conv/depthwise/kernels/a64_u8q_nhwc_3x3_s1_output2x2_dot_depthfirst/generic.cpp",
+            "src/core/NEON/kernels/arm_conv/pooling/kernels/a64_fp16_nhwc_max_generic_depthfirst/generic.cpp",
+            "src/core/NEON/kernels/arm_conv/pooling/kernels/a64_s8_nhwc_avg_generic_depthfirst/generic.cpp",
+            "src/core/NEON/kernels/arm_gemm/kernels/a64_sgemm_8x12/x1.cpp",
+            "src/core/NEON/kernels/arm_gemm/kernels/a64_hybrid_u8qa_mmla_4x16/generic.cpp",
+            "src/core/NEON/kernels/arm_gemm/kernels/a64_hybrid_s8qs_mmla_6x16/generic.cpp",
+            "src/core/NEON/kernels/arm_conv/depthwise/interleaves/a64_s8q_3x3_dot.cpp",
+            "src/core/NEON/kernels/arm_conv/depthwise/kernels/a64_s8q_nhwc_3x3_s1_output2x2_dot_depthfirst/generic.cpp",
+            "src/core/cpu/kernels/floor/neon/fp32.cpp",
+            "src/core/NEON/kernels/arm_gemm/kernels/a64_gemm_u8_8x12/generic.cpp",
+            "src/core/NEON/kernels/arm_gemm/kernels/a64_gemm_u8_8x12/a55r1.cpp",
+            "src/core/NEON/kernels/arm_gemm/kernels/a64_hgemm_8x24/a55r1.cpp",
+            "src/core/cpu/kernels/add/neon/qsymm16.cpp",
+            "src/core/NEON/kernels/arm_conv/depthwise/kernels/a64_fp16_nhwc_3x3_s1_output4x4_mla_depthfirst/generic_indirect.cpp",
+            "src/core/NEON/kernels/arm_conv/depthwise/kernels/a64_u8q_nhwc_3x3_s2_output2x2_mla_depthfirst/generic.cpp",
+            "src/core/NEON/kernels/arm_gemm/kernels/a64_hybrid_s8qa_mmla_4x16/generic.cpp",
+            "src/core/cpu/kernels/pool2d/neon/fp16.cpp",
+            "src/core/NEON/kernels/arm_gemm/kernels/a64_sgemm_8x12/a55.cpp",
+            "src/core/NEON/kernels/arm_conv/pooling/kernels/a64_s8_nhwc_max_2x2_s1_output2x2_depthfirst/generic.cpp",
+            "src/core/NEON/kernels/arm_gemm/kernels/a64_gemm_s8_8x12/a55r1.cpp",
+	],
     hdrs = glob([
+        "src/core/NEON/kernels/**/*.h",
+        "src/core/NEON/kernels/**/*.hpp",
         "arm_compute/runtime/**/*.h",
-        "arm_compute/runtime/*.h",]) + [
+        "arm_compute/runtime/*.h",
+        "arm_compute/core/**/*.h",
+        "**/*.inl",
+    ]) + [
         "arm_compute_version.embed",
     ],
-    defines = ["ARM_COMPUTE_CPP_SCHEDULER"],
+    defines = [
+        "ARM_COMPUTE_CPP_SCHEDULER",
+        "ARM_COMPUTE_CPU_ENABLED",
+        "ENABLE_NEON",
+        "ARM_COMPUTE_ENABLE_NEON",
+        "ENABLE_SVE",
+        "ARM_COMPUTE_ENABLE_SVE",
+        "ARM_COMPUTE_ENABLE_FP16",
+        "ARM_COMPUTE_ENABLE_BF16",
+        "ARM_COMPUTE_ENABLE_I8MM",
+        "ARM_COMPUTE_ENABLE_SVEF32MM",
+        "ENABLE_FP16_KERNELS",
+        "ENABLE_FP32_KERNELS",
+        "ENABLE_QASYMM8_KERNELS",
+        "ENABLE_QASYMM8_SIGNED_KERNELS",
+        "ENABLE_QSYMM16_KERNELS",
+        "ENABLE_INTEGER_KERNELS",
+        "ENABLE_NHWC_KERNELS",
+    ],
+    includes = [
+        "src/core/cpu/kernels/assembly",
+        "src/core/NEON/kernels/assembly",
+        "src/core/NEON/kernels/convolution/common",
+        "src/core/NEON/kernels/convolution/winograd",
+        "arm_compute/runtime",
+    ],
     linkopts = ["-lpthread"],
     visibility = ["//visibility:public"],
-    deps = ["arm_compute_core"],
+    deps = ["include",
+	    "arm_compute_sve"]
 )

-cc_library(
-    name = "arm_compute_graph",
-    srcs = glob([
-        "src/graph/*.cpp",
-        "src/graph/algorithms/*.cpp",
-        "src/graph/backends/*.cpp",
-        "src/graph/detail/*.cpp",
-        "src/graph/frontend/*.cpp",
-        "src/graph/mutators/*.cpp",
-        "src/graph/nodes/*.cpp",
-        "src/graph/printers/*.cpp",
-        "src/graph/backends/NEON/*.cpp",
-        "**/*.h",
-    ]),
-    hdrs = glob(["arm_compute/graph/**/*.h"]),
-    visibility = ["//visibility:public"],
-    deps = ["arm_compute_core"],
-)
