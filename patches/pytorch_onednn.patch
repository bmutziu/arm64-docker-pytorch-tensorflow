 *******************************************************************************
 Copyright 2020 Arm Limited and affiliates.
 SPDX-License-Identifier: Apache-2.0

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
 *******************************************************************************

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 50f7657440..9d673c7106 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -195,9 +195,10 @@ option(USE_VULKAN_SHADERC_RUNTIME "Use Vulkan Shader compilation runtime(Needs s
 option(USE_XNNPACK "Use XNNPACK" ON)
 option(USE_ZMQ "Use ZMQ" OFF)
 option(USE_ZSTD "Use ZSTD" OFF)
-cmake_dependent_option(
-  USE_MKLDNN "Use MKLDNN. Only available on x86 and x86_64." ON
-  "CPU_INTEL" OFF)
+option(USE_MKLDNN "Use MKLDNN" OFF)
+#cmake_dependent_option(
+#  USE_MKLDNN "Use MKLDNN. Only available on x86 and x86_64." ON
+#  "CPU_INTEL" OFF)
 set(MKLDNN_ENABLE_CONCURRENT_EXEC ${USE_MKLDNN})
 cmake_dependent_option(
     USE_MKLDNN_CBLAS "Use CBLAS in MKLDNN" OFF
diff --git a/cmake/Modules/FindMKLDNN.cmake b/cmake/Modules/FindMKLDNN.cmake
index 62ec456f73..41e02505f8 100644
--- a/cmake/Modules/FindMKLDNN.cmake
+++ b/cmake/Modules/FindMKLDNN.cmake
@@ -42,9 +42,14 @@ ELSE(MKL_FOUND)
   SET(MKLDNN_USE_MKL "NONE" CACHE STRING "" FORCE)
 ENDIF(MKL_FOUND)
 
+# Try and make it build with ACL!
+IF(CMAKE_SYSTEM_PROCESSOR MATCHES "^(aarch64.*|AARCH64.*|arm64.*|ARM64.*)" AND DEFINED ENV{USE_ACL})
+  SET(DNNL_AARCH64_USE_ACL ON CACHE BOOL "" FORCE)
+ENDIF()
+
 SET(MKL_cmake_included TRUE)
 IF (NOT MKLDNN_CPU_RUNTIME)
-  SET(MKLDNN_CPU_RUNTIME "OMP" CACHE STRING "")
+  SET(MKLDNN_CPU_RUNTIME "OMP" CACHE STRING "" FORCE)
 ELSEIF (MKLDNN_CPU_RUNTIME STREQUAL "TBB")
   IF (USE_TBB)
     MESSAGE(STATUS "MKL-DNN is using TBB")
@@ -63,6 +68,9 @@ ELSEIF (MKLDNN_CPU_RUNTIME STREQUAL "TBB")
   ENDIF()
 ENDIF()
 MESSAGE(STATUS "MKLDNN_CPU_RUNTIME = ${MKLDNN_CPU_RUNTIME}")
+MESSAGE(STATUS "DNNL_AARCH64_USE_ACL = ${DNNL_AARCH64_USE_ACL}")
+
+
